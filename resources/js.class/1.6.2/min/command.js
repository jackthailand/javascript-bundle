JS.Command=JS.Class({initialize:function(a){if(Function.is(a))a={execute:a};this._functions=a;this._stack=this._functions.stack||null},execute:function(a){if(this._stack)this._stack._restart();var b=this._functions.execute;if(b)b.apply(this);if(this._stack&&a!==false)this._stack.push(this)},undo:function(){var exec=this._functions.undo;if(exec)exec.apply(this)},extend:{Stack:JS.Class({include:[JS.Observable||{},JS.Enumerable||{}],initialize:function(a){a=a||{};this._redo=a.redo||null;this.clear()},forEach:function(a,b){for(var c=0,d=this._stack.length;c<d;c++){if(this._stack[c])a.call(b||null,this._stack[c],c)}},clear:function(){this._stack=[];this.length=this.pointer=0},_restart:function(){if(this.pointer==0&&this._redo&&this._redo.execute)this._redo.execute()},push:function(a){this._stack.splice(this.pointer,this.length);this._stack.push(a);this.length=this.pointer=this._stack.length;if(this.notifyObservers)this.notifyObservers(this)},stepTo:function(a){if(a<0||a>this.length)return;var b,c;switch(true){case a>this.pointer:for(b=this.pointer,c=a;b<c;b++)this._stack[b].execute(false);break;case a<this.pointer:if(this._redo&&this._redo.execute){this._redo.execute();for(b=0,c=a;b<c;b++)this._stack[b].execute(false)}else{for(b=0,c=this.pointer-a;b<c;b++)this._stack[this.pointer-b-1].undo()}break}this.pointer=a;if(this.notifyObservers)this.notifyObservers(this)},undo:function(){this.stepTo(this.pointer-1)},redo:function(){this.stepTo(this.pointer+1)}})}});